{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CategoriesScreen from \"./screens/CategoriesScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"#351401\"\n          },\n          headerTintColor: \"white\",\n          contentStyle: {\n            backgroundColor: \"#3f2f25\"\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"MealsCategories\",\n          component: CategoriesScreen,\n          options: {\n            title: \"All Categories\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"MealsOverview\",\n          component: MealsOverviewScreen\n        }), _jsx(Stack.Screen, {\n          name: \"MealDetail\",\n          component: MealDetailScreen,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                children: \"Tap Me!\"\n              });\n            }\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["NavigationContainer","StatusBar","CategoriesScreen","createNativeStackNavigator","MealsOverviewScreen","MealDetailScreen","Stack","App","headerStyle","backgroundColor","headerTintColor","contentStyle","title","headerRight","styles","StyleSheet","create"],"sources":["/Users/darrachbarneveld/Downloads/starting-project 2/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport CategoriesScreen from \"./screens/CategoriesScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: { backgroundColor: \"#351401\" },\n            headerTintColor: \"white\",\n            contentStyle: { backgroundColor: \"#3f2f25\" },\n          }}\n        >\n          <Stack.Screen\n            name=\"MealsCategories\"\n            component={CategoriesScreen}\n            options={{\n              title: \"All Categories\",\n            }}\n          />\n          <Stack.Screen\n            name=\"MealsOverview\"\n            component={MealsOverviewScreen}\n            // options={({ route, navigation }) => {\n            //   const catId = route.params.categoryId;\n            //   return { title: catId };\n            // }}\n          />\n          <Stack.Screen\n            name=\"MealDetail\"\n            component={MealDetailScreen}\n            options={{\n              headerRight: () => {\n                return <Button>Tap Me!</Button>;\n              },\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({});\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;AAEA,OAAOC,gBAAP;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,mBAAP;AACA,OAAOC,gBAAP;;;;AAEA,IAAMC,KAAK,GAAGH,0BAA0B,EAAxC;AAEA,eAAe,SAASI,GAAT,GAAe;EAC5B,OACE;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADF,EAEE,KAAC,mBAAD;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QACE,aAAa,EAAE;UACbC,WAAW,EAAE;YAAEC,eAAe,EAAE;UAAnB,CADA;UAEbC,eAAe,EAAE,OAFJ;UAGbC,YAAY,EAAE;YAAEF,eAAe,EAAE;UAAnB;QAHD,CADjB;QAAA,WAOE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,iBADP;UAEE,SAAS,EAAEP,gBAFb;UAGE,OAAO,EAAE;YACPU,KAAK,EAAE;UADA;QAHX,EAPF,EAcE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,eADP;UAEE,SAAS,EAAER;QAFb,EAdF,EAsBE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,YADP;UAEE,SAAS,EAAEC,gBAFb;UAGE,OAAO,EAAE;YACPQ,WAAW,EAAE,uBAAM;cACjB,OAAO,KAAC,MAAD;gBAAA;cAAA,EAAP;YACD;UAHM;QAHX,EAtBF;MAAA;IADF,EAFF;EAAA,EADF;AAuCD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}